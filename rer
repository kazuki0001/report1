<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <script type="importmap">
      {
        "imports": {
          "three": "https://unpkg.com/three@0.152.2/build/three.module.js"
        }
      }
    </script>
    <script type="module">
	      import * as THREE from "three";
	
		   // サイズを指定
const width = 960;
const height = 540;
let rot = 0; // 角度
let mouseX = 0; // マウス座標

// マウス座標はマウスが動いた時のみ取得できる
document.addEventListener("mousemove", (event) => {
  mouseX = event.pageX;
});
// レンダラーを作成
const renderer = new THREE.WebGLRenderer({
  canvas: document.querySelector('#myCanvas')
});
renderer.setSize(width, height);

// シーンを作成
const scene = new THREE.Scene();

// カメラを作成
const camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);
camera.position.set(0, 0, +1000);

// ドーナツを作成
const geometry2 = new THREE.TorusGeometry(500, 100, 64, 100);
// マテリアルを作成
const material2 = new THREE.MeshBasicMaterial({color: 0x6699FF});
// メッシュを作成
const mesh2 = new THREE.Mesh(geometry2, material2);
// 3D空間にメッシュを追加
scene.add(mesh2);

      const geometry = new THREE.BoxGeometry(400, 400, 400);
      const material = new THREE.MeshLambertMaterial({color: 0X00FFFF});
      const box = new THREE.Mesh(geometry, material);
      scene.add(box);


const geometry1 = new THREE.SphereGeometry(300, 0, 0);
const material1 = new THREE.MeshStandardMaterial({color: 0xFF0000});
// メッシュを作成
const mesh1 = new THREE.Mesh(geometry1, material1);
// 3D空間にメッシュを追加
scene.add(mesh1);
// 平行光源
const directionalLight = new THREE.DirectionalLight(0xFFFFFF);
directionalLight.position.set(1, 1, 1);
// シーンに追加
scene.add(directionalLight);

tick();

// 毎フレーム時に実行されるループイベントです
function tick() {
  // マウスの位置に応じて角度を設定
  // マウスのX座標がステージの幅の何%の位置にあるか調べてそれを360度で乗算する
  const targetRot = (mouseX / window.innerWidth) * 360;
  // イージングの公式を用いて滑らかにする
  // 値 += (目標値 - 現在の値) * 減速値
  rot += (targetRot - rot) * 0.02;

  // ラジアンに変換する
  const radian = rot * Math.PI / 180;
  // 角度に応じてカメラの位置を設定
  camera.position.x = 1000 * Math.sin(radian);
  camera.position.y = 1000 * Math.cos(radian);
  // 原点方向を見つめる
  camera.lookAt(new THREE.Vector3(0, 0, 0));
   box.rotation.y += 0.01;
    mesh1.rotation.x += 0.01;
    mesh2.rotation.x+= 0.02;
  renderer.render(scene, camera);

  requestAnimationFrame(tick);
}   
    </script>
  </head>
  <body>
    <canvas id="myCanvas"></canvas>
  </body>
</html>
